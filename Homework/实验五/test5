# T1
def spin_words(sentence):
    words = sentence.split()
    re = []
    for word in words:
        if len(word)>=5:
            re.append(word[::-1])
        else:
            re.append(word)
    result = " ".join(re)
    return result    

# T2
def find_outlier(integers):
    o_count = 0
    j_count = 0
    for integer in integers:
        if integer%2==0:
            o_count+=1
            num_o = integer
        else:
            j_count+=1
            num_j = integer
        if o_count>1 and j_count==1:
            result = num_j
            break
        if j_count>1 and o_count==1:
            result = num_o
            break
    return result

# T3
def is_pangram(s):
    s = s.lower()
    for character in 'abcdefghijklmnopqrstuvwxyz':
        if character not in s:
            return False
    return True

# T4
def validate_sudoku(board):
    nums = set(range(1,10))
    for i in board:
        if set(i)!=nums:
            return False

    for j in zip(*board):
        if set(j)!=nums:
            return False
    
    for i in range(0,9,3):
        for j in range(0,9,3):
            if nums!= {(board[x][y])
                for x in range(i,i+3)
                    for y in range(j,j+3)
            }:
                return False
    return True   

# T5
def triangle(row):
    reduce = [3**i+1 for i in range(10) if 3**i <= len(row)][::-1]

    COLOR = {'GG': 'G', 'BB': 'B', 'RR': 'R', 'BR': 'G',
            'BG': 'R', 'GB': 'R', 'GR': 'B', 'RG': 'B', 'RB': 'G'}

    for length in reduce:
        while len(row) >= length:
            row = [COLOR[row[i] + row[i+length-1]] for i in range(len(row)-length+1)]

    return row[0]